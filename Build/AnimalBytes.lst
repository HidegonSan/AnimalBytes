00000000 d _TLS_MODULE_BASE_
00000000 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000001 D CTRPluginFramework::PrivColor::_format
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000024 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000025 00000001 b __tls_guard
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000018 t __tcf_0
070012d0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001354 000000d0 T CTRPluginFramework::main()
07001424 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07001504 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
070016e4 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
070016e8 00000004 T CTRPluginFramework::OnProcessExit()
070016ec T svcCustomBackdoor
070016f4 T svcConvertVAToPA
070016fc T svcFlushDataCacheRange
07001704 T svcInvalidateEntireInstructionCache
0700170c T svcMapProcessMemoryEx
07001720 T svcUnmapProcessMemoryEx
07001728 T svcControlProcess
07001730 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07001730 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070017a4 00000040 T CTRPluginFramework::PluginMenu::Run() const
070017e4 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
070017ec 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070017f4 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07001804 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07001810 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07001810 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
0700183c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0700183c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07001854 000000e4 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07001938 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070019c0 00000110 T CTRPluginFramework::Color::Fade(float)
07001ad0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07001b10 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07001b8c 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07001dac 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07001db4 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07001e08 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07001e3c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001ec0 00000024 T OnLoadCro
07001ee4 00000004 W CTRPluginFramework::OnPluginToSwap()
07001ee8 00000004 W CTRPluginFramework::OnPluginFromSwap()
07001eec 000001d4 T CTRPluginFramework::Initialize()
070020c0 000000ac T CTRPluginFramework::ThreadExit()
0700216c 00000054 T abort
070021c0 00000044 T CTRPluginFramework::ThreadInit(void*)
07002204 00000098 T __entrypoint
070022a0 000005ac T CTRPluginFramework::KeepThreadMain(void*)
0700284c 0000003c t _GLOBAL__sub_I_g_gspEventThreadPriority
07002888 00000020 t _GLOBAL__sub_D_g_gspEventThreadPriority
070028a8 000000b8 t NCSNDCmd_Add
07002960 00000084 t NCSNDCmd_Execute.constprop.0
070029e4 0000005c T ncsndNotifyAptEvent
07002a40 00000004 t ncsndAptHook
07002a44 000001c8 T ncsndInit
07002c0c 000000ac T ncsndExit
07002cb8 00000024 T ncsndInitializeSound
07002cdc 00000260 T ncsndPlaySound
07002f3c 00000040 T ncsndStopSound
07002f7c 00000090 T ncsndIsPlaying
0700300c T __aeabi_read_tp
07003018 T LoadCROHooked
0700302c T AR__ExecuteRoutine
07003054 t stackBak
0700305c 0000003c T __syscall_getreent
07003098 0000003c T __getThreadLocalStorage
070030d4 00000070 T __syscall_gettod_r
07003144 00000004 T __syscall_lock_acquire
07003148 00000004 T __syscall_lock_release
0700314c 00000004 T __syscall_lock_init_recursive
07003150 00000004 T __syscall_lock_acquire_recursive
07003154 00000004 T __syscall_lock_release_recursive
07003158 00000060 T __system_initSyscalls
070031b8 00000020 T __libctru_exit
070031d8 00000020 T __appExit
070031f8 00000140 T __createThread
07003338 0000009c T __startThread
070033d4 00000024 T threadGetHandle
070033f8 0000002c T threadFree
07003424 00000024 T threadJoin
07003448 00000020 T threadGetCurrent
07003468 0000003c T threadExit
070034a4 0000003c t _thread_begin
070034e0 00000070 T plgLdrExit
07003550 000000e4 T plgLdrInit
07003634 00000050 T PLGLDR__GetPluginPath
07003684 00000024 T PLGLDR__FetchEvent
070036a8 000000cc T PLGLDR__Reply
07003774 000000a8 T __system_allocateHeaps
0700381c 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07003848 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07003870 0000015c t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
070039cc 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07003a4c 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07003aa8 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07003ac0 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07003b90 00000004 T __gsp__Update
07003b94 00000294 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07003e28 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07003e40 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07003e60 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07003ea8 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07003edc 00000020 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07003efc 00000020 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07003f1c 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07003f58 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07003f84 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07004014 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07004048 000000c8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07004110 000001a8 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
070042b8 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
070042f4 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07004314 000000ac T CTRPluginFramework::SystemImpl::Initialize()
070043c0 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070043d8 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07004414 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07004434 0000003c T CTRPluginFramework::SystemImpl::Status()
07004470 00000244 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
070046b4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07004744 00000218 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700495c 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070049d0 00000314 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07004ce4 00000208 T CTRPluginFramework::Screenshot::UpdateFileCount()
07004eec 00000048 T CTRPluginFramework::Screenshot::Initialize()
07004f34 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07004f94 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07005010 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07005028 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07005028 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07005098 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07005198 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
070051e8 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
070052c8 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07005324 00000028 T CTRPluginFramework::ScreenImpl::Release()
0700534c 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
070053bc 0000002c T CTRPluginFramework::ScreenImpl::Flush()
070053e8 00000094 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700547c 00000030 T CTRPluginFramework::ScreenImpl::Copy()
070054ac 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07005578 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07005580 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070055e0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07005630 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700566c 00000090 T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
070056fc 00000074 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07005770 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
070057a0 0000004c T CTRPluginFramework::ScreenImpl::SwapBuffer()
070057ec 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07005800 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0700581c 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07005838 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07005840 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07005848 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07005850 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0700586c 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07005888 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
070058dc 00000030 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700590c 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07005964 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
070059c0 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
070059d0 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07005a20 0000003c t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
07005a5c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07005a5c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07005abc 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07005b14 000000a4 T CTRPluginFramework::Scheduler::Initialize()
07005bb8 00000048 T CTRPluginFramework::Scheduler::Exit()
07005c00 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005c00 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005c20 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07005c60 000001a8 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07005e08 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07005f0c 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0700604c 00000158 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
070061a4 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
070061e8 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07006268 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
070062b4 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07006348 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07006364 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07006380 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
070063e4 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07006454 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
070064e8 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07006590 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
070065c8 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
070065e4 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
070065fc t _store_reg_loop
0700661c 000000e8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07006704 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
07006740 000000c0 T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07006800 00000114 T CTRPluginFramework::ProcessImpl::Initialize()
07006914 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07006980 000000e4 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07006a64 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07006a90 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07006aec 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07006af8 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07006b10 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07006b50 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07006b94 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07006ba4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07006bb8 00000004 T Kernel::Initialize()
07006bbc 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07006bd4 0000000c T KProcess::GetCurrent()
07006be0 00000024 T KProcess::PatchCore2Access()
07006c04 0000002c T KProcess::PatchCategory(unsigned long)
07006c30 00000014 T KProcess__PatchCategory
07006c44 0000002c T KProcess::PatchMaxPriority(unsigned long)
07006c70 00000014 T KProcess__PatchMaxPriority
07006c84 00000028 T KProcess::PatchMaxThreads()
07006cac 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07006ccc 00000010 t DecodeARMBranch(unsigned long const volatile*)
07006cdc 00000060 t CTRPluginFramework::AsmWrapper* std::__relocate_a_1<CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper> >(CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper>&) [clone .isra.0]
07006d3c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07006dc0 00000274 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
07007034 00000044 W CTRPluginFramework::Lock::~Lock()
07007034 00000044 W CTRPluginFramework::Lock::~Lock()
07007078 00000094 T CTRPluginFramework::HookManager::HookManager()
07007078 00000094 T CTRPluginFramework::HookManager::HookManager()
07007110 000000c0 T __hook__CheckTlsValue
070071d0 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07007244 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
070072a8 000000cc T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07007374 0000000c T CTRPluginFramework::HookManager::Lock()
07007380 0000000c T CTRPluginFramework::HookManager::Unlock()
0700738c 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
070073f4 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0700746c 000000c4 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
07007530 0000008c T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
070075bc 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07007718 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07007724 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07007760 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07007784 00000004 t addrMapNodeDestructor(rbtree_node*)
07007788 00000134 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070078bc 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070078c4 0000006c T CTRPluginFramework::Heap::Free(void*)
07007930 0000000c T CTRPluginFramework::Heap::SpaceFree()
0700793c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07007948 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07007968 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
07007970 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
07007974 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
07007978 0000004c T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
070079c4 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
070079e8 00000048 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07007a30 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
07007b58 000001ec T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
07007d44 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07007d68 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07007db0 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
07007ddc 00000028 W CTRPluginFramework::Mutex::~Mutex()
07007ddc 00000028 W CTRPluginFramework::Mutex::~Mutex()
07007e04 00000024 W CTRPluginFramework::File::~File()
07007e04 00000024 W CTRPluginFramework::File::~File()
07007e28 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007e28 00000030 W CTRPluginFramework::TextBox::~TextBox()
07007e58 0000001c W CTRPluginFramework::TextBox::~TextBox()
07007e74 00000100 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07007e74 00000100 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07007f74 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07007f94 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700811c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700813c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07008158 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07008174 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0700817c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07008184 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700818c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700818c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070081c8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070081c8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070081e8 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
07008320 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0700835c 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0700835c 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
070083a0 000000fc W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
070084a0 0000073c T CTRPluginFramework::PluginMenuImpl::Run()
07008bdc 00000054 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07008c30 00000098 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07008cc8 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07008dd0 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07008dd0 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07008e38 00000190 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07008fc8 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07009100 0000019c T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700929c 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
070092e4 000000b4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
07009398 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070093d4 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07009508 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07009648 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07009654 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07009668 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07009668 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
070097b8 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
070097b8 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07009970 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
070099c8 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07009a88 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07009b74 00000064 t __tcf_0
07009bd8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07009c5c 00000550 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07009c5c 00000550 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700a1ac 00000334 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700a4e0 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700a618 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700aab0 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700abcc 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700ac58 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0700ac94 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0700acc0 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700ad94 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0700ae18 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0700ae98 0000009c T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0700af34 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0700af90 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0700b050 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700b0a0 00000154 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0700b1f8 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0700b5a4 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0700b7c8 0000005c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0700b824 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700b824 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700b860 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0700b9dc 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0700ba34 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0700ba90 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0700bbc8 00000170 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0700bd38 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0700bd50 000000e4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0700be34 000001c4 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700bff8 000000e4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0700c0dc 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0700c29c 000000e4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0700c380 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0700c408 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0700c41c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0700c440 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0700c4c4 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
0700c5d4 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700c630 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700c68c 000000f0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
0700c77c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700c7d8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700c7d8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700ca2c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0700ca80 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0700caa4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0700cacc 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0700cbb0 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0700ccd0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0700ce9c 00000028 W CTRPluginFramework::ARCode::~ARCode()
0700ce9c 00000028 W CTRPluginFramework::ARCode::~ARCode()
0700cec4 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0700cef8 00000014 t __tcf_0
0700cf0c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0700d084 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700d19c 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0700d318 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0700d438 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0700d474 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0700d5bc 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0700d5ec 000000e8 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0700d6d4 00000280 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0700d954 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0700da20 000001c0 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0700dbe0 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0700dd80 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0700dd90 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0700dda0 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0700ddb0 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0700ddb8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0700ddb8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0700dde8 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
0700de04 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700de04 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700ded8 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700def4 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700def4 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700dfc8 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0700dfd8 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0700e028 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0700e040 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0700e064 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
0700e10c 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0700e11c 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0700e13c 000000e4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0700e220 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0700e278 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0700e28c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0700e28c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0700e2b4 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0700e2d0 000002cc T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0700e59c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0700e59c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0700e688 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0700e690 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0700e6a4 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0700e6b0 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0700e6b8 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0700e6dc 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0700e70c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0700e728 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0700e790 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700e814 000000d8 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0700e814 000000d8 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0700e8ec 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0700e8ec 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0700ea04 00000040 T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0700ea44 00000058 T CTRPluginFramework::Menu::CloseAll()
0700ea9c 00000030 T CTRPluginFramework::Menu::~Menu()
0700ea9c 00000030 T CTRPluginFramework::Menu::~Menu()
0700eacc 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0700ead8 00000008 T CTRPluginFramework::Menu::GetFolder() const
0700eae0 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0700eae8 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0700eb2c 00000388 T CTRPluginFramework::Menu::Draw() const
0700eeb8 000000a0 T CTRPluginFramework::Menu::_ScrollUp(int)
0700ef58 000000a0 T CTRPluginFramework::Menu::_ScrollDown(int)
0700eff8 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0700f240 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0700f3ac 00000068 T CTRPluginFramework::Menu::ShowNote()
0700f414 00000008 T CTRPluginFramework::Menu::CloseNote()
0700f41c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0700f424 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0700f464 00000044 T CTRPluginFramework::Menu::Pop()
0700f4a8 000000a8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0700f550 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f598 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f5e4 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
0700f61c 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0700f65c 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f6a4 00000048 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700f6ec 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700f720 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700f7a4 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0700f808 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f868 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f8c8 000001e0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700f8c8 000001e0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700faa8 000001e8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700faa8 000001e8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fc90 00000074 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0700fc90 00000074 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0700fd04 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0700fd0c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0700fd14 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0700fd1c 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0700fd24 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0700fd2c 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0700fd34 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
0700fd90 00000190 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0700ff20 0000049c T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070103bc 000001c8 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07010584 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
070105ec 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701067c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070106fc 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07010780 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070108dc 00000168 T CTRPluginFramework::KeyboardImpl::_Update(float)
07010a44 00000588 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07010fcc 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701102c 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
070110a0 000000a4 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07011144 00000518 T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0701165c 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
070116cc 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
070116d4 00000068 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0701173c 000000e8 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07011824 00000030 W std::vector<float, std::allocator<float> >::push_back(float const&)
07011854 000000e4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07011938 00000030 W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07011968 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07011c28 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
07011c58 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07011cbc 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07011ce8 000000d4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07011dbc 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
07011e80 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
07011f4c 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
070124c8 00000580 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07012a48 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
07012b08 00000a8c T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07013594 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07013654 00000c68 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
070142bc 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070142fc 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
070143c0 000001b8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07014578 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
070145c0 00000064 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07014624 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07014670 00000488 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07014af8 00000288 T CTRPluginFramework::KeyboardImpl::Run()
07014d80 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07014d80 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07014da8 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07014dec 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07014e18 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07014e18 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07014e1c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07014e1c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07014e20 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07014e20 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07014e24 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07014e38 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07014e4c 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07014e60 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07014ffc 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
070150f0 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701522c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070152b0 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07015510 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701556c 000001dc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07015748 00000268 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070159b0 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07015b90 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07015b90 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07015c74 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07015c90 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07015d48 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07015d64 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07015dd8 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07015e04 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07015e40 00000010 T CTRPluginFramework::HexEditor::Refresh()
07015e50 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07015e94 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07015ecc 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07015ef8 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07015f78 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07016010 000000d0 T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
070160e0 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
070161a0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07016250 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07016404 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07016414 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07016424 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07016434 00000020 T CTRPluginFramework::HexEditor::ByteView::ByteView(CTRPluginFramework::HexEditor::Context&)
07016434 00000020 T CTRPluginFramework::HexEditor::ByteView::ByteView(CTRPluginFramework::HexEditor::Context&)
07016454 00000020 T CTRPluginFramework::HexEditor::IntegerView::IntegerView(CTRPluginFramework::HexEditor::Context&)
07016454 00000020 T CTRPluginFramework::HexEditor::IntegerView::IntegerView(CTRPluginFramework::HexEditor::Context&)
07016474 00000020 T CTRPluginFramework::HexEditor::AsmView::AsmView(CTRPluginFramework::HexEditor::Context&)
07016474 00000020 T CTRPluginFramework::HexEditor::AsmView::AsmView(CTRPluginFramework::HexEditor::Context&)
07016498 000002e8 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07016498 000002e8 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07016780 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
070167c0 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07016988 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
070169c8 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07016a34 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07016b08 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07016b60 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07016c44 00000180 T CTRPluginFramework::HexEditor::_BrowseHistory()
07016dc4 00000068 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07016e2c 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07016fb0 000001c8 T CTRPluginFramework::HexEditor::_Update()
07017178 00000294 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701740c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701749c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07017520 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701757c 000000bc T CTRPluginFramework::GuideReader::_LoadBMP()
07017638 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701766c 000002c0 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701792c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701792c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07017b14 000003f4 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.0]
07017f08 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07017f20 0000015c T CTRPluginFramework::GuideReader::Draw()
0701807c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070180f0 000000e4 T CTRPluginFramework::Converter::Converter()
070180f0 000000e4 T CTRPluginFramework::Converter::Converter()
070181d4 00000010 T CTRPluginFramework::Converter::Instance()
070181e4 00000108 T CTRPluginFramework::Converter::_Draw()
070182ec 00000220 T CTRPluginFramework::Converter::operator()(unsigned long)
0701850c 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07018730 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701875c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07018798 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
070187d4 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07018810 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701884c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07018888 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070188b4 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070188f0 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701892c 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07018968 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070189a4 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070189d0 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07018a0c 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07018a38 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
07018a64 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
07018a90 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
07018acc 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07018af8 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07018b34 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07018b60 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07018b94 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07018bd0 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07018bfc 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07018c38 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07018c64 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07018c90 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07018cbc 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07018ce8 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07018d14 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07018d40 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07018d6c 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07018d98 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07018dd4 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07018e00 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07018e1c 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07018e50 000000ac T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07018e50 000000ac T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07018efc 00000028 T CTRPluginFramework::Window::~Window()
07018efc 00000028 T CTRPluginFramework::Window::~Window()
07018f24 00000064 T CTRPluginFramework::Window::Draw() const
07018f88 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07019064 00000018 T CTRPluginFramework::Window::DrawButton() const
0701907c 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07019094 00000018 T CTRPluginFramework::Window::MustClose() const
070190ac 00000028 T CTRPluginFramework::Window::Close() const
070190d4 00000004 T CTRPluginFramework::Window::GetRect() const
070190d8 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0701910c 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0701918c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070191ac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070191ac 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070191c0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070191c0 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
070191e0 00000024 T CTRPluginFramework::UIContainer::Draw()
07019204 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07019238 000000e4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0701931c 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07019350 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07019350 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070193c4 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070193c4 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07019468 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07019470 00000030 T CTRPluginFramework::TouchKeyString::CanUse()
070194a0 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0701956c 000000e4 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07019650 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07019668 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0701967c 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07019694 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070196dc 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070196e4 00000008 W CTRPluginFramework::Drawable::operator()()
070196ec 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
070197d0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070197d0 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0701985c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0701985c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07019914 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07019914 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070199a0 00000040 T CTRPluginFramework::TouchKey::Clear()
070199e0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070199e0 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07019a00 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07019a1c 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07019a24 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07019a94 00000074 T CTRPluginFramework::TouchKey::Draw()
07019b08 000000b8 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07019bc0 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07019bc8 000000e4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07019cac 000001c4 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07019cac 000001c4 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07019e70 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07019e74 000002fc T CTRPluginFramework::TextBox::Draw()
0701a170 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0701a19c 00000094 T CTRPluginFramework::TextBox::TextBox()
0701a19c 00000094 T CTRPluginFramework::TextBox::TextBox()
0701a230 0000000c T CTRPluginFramework::TextBox::Open() const
0701a23c 0000000c T CTRPluginFramework::TextBox::Close() const
0701a248 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0701a250 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0701a498 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0701a4a4 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0701a538 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0701a5ec 00000054 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0701a640 00000098 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0701a6d8 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
0701a914 000001b4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0701a914 000001b4 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0701aac8 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701abb0 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0701acdc 00000120 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0701adfc 0000019c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0701af98 000001d0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0701b168 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0701b1cc 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0701b404 00000498 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0701b89c 00000384 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0701bc20 0000006c T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0701bc8c 00000068 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0701bcf4 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0701bd78 00000184 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0701befc 0000018c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701c088 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0701c128 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0701c314 00000034 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0701c348 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0701c4b4 00000018 t __tcf_0
0701c4cc 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0701c670 00000118 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0701c788 00000090 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0701c818 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701c8c0 000002b4 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701cb74 0000004c W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0701cbc0 000001c8 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0701cd88 000000fc W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0701ce84 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0701cec0 00000678 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0701d538 000001a4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701d6dc 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0701d728 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0701d9f0 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0701dab4 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
0701dc00 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0701dc20 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0701dc40 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0701dc6c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0701dca0 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0701dcc8 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0701dcf0 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0701dd10 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0701dd40 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0701dd88 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0701ddcc 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
0701df10 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
0701df3c 00000044 t __tls_init
0701df3c 00000044 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0701df80 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0701dfcc 00000098 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701e064 00000090 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701e0f4 000000ac T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701e1a0 000000b8 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701e258 000000b4 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701e310 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
0701e364 0000000c T CTRPluginFramework::OSDImpl::Lock()
0701e370 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0701e38c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0701e398 000000ec T CTRPluginFramework::OSDImpl::PauseFrame()
0701e488 0000019c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0701e624 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0701e6d0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0701e700 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0701e784 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0701e818 0000004c t CTRPluginFramework::GetBuffer(unsigned long)
0701e864 000000a8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0701e90c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0701e93c 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
0701eaa8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
0701eb00 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701eb00 00000088 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701eb88 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0701ec68 000000d0 T CTRPluginFramework::InstallOSD()
0701ed38 00000058 T CTRPluginFramework::OSDImpl::_Initialize()
0701ed90 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
0701ed98 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701ee84 000001a8 T CTRPluginFramework::OSDImpl::Update()
0701f02c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0701f084 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0701f14c 0000056c T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int)
0701f6b8 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0701f744 00000090 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0701f7d4 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701f854 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0701f854 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0701f874 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0701f890 0000007c T CTRPluginFramework::NumericTextBox::Draw()
0701f90c 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701f9a4 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
0701f9dc 00000064 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0701fa40 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0701fb38 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0701fb48 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0701fb58 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0701fb60 0000000c T CTRPluginFramework::NumericTextBox::Clear()
0701fb6c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0701fb6c 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0701fbd4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0701fc48 00000024 t fontGetSystemFont
0701fc6c 00000010 T CTRPluginFramework::Glyph::Width() const
0701fc7c 000004b8 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07020134 00000320 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07020454 000000c0 T CTRPluginFramework::Font::Initialize()
07020514 000001a4 W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
070206b8 000000c0 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07020778 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
070208a4 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07020930 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07020950 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07020998 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07020a1c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07020a1c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07020a20 00000014 T CTRPluginFramework::FloatingButton::Draw()
07020a34 00000014 T CTRPluginFramework::FloatingButton::operator()()
07020a48 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07020a5c 000001a4 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07020c00 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07020c00 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07020c40 00000094 T CTRPluginFramework::ComboBox::Draw()
07020cd4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07020d64 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07020de4 000000ac T CTRPluginFramework::ComboBox::operator()()
07020e90 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07020e90 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07020edc 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07020ef8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07020ef8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07020f44 0000003c T CTRPluginFramework::ComboBox::Clear()
07020f80 000000ec W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702106c 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070210bc 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702113c 00000020 T CTRPluginFramework::Button::~Button()
0702113c 00000020 T CTRPluginFramework::Button::~Button()
0702115c 0000001c T CTRPluginFramework::Button::~Button()
07021178 00000158 T CTRPluginFramework::Button::Draw()
070212d0 00000078 T CTRPluginFramework::Button::operator()()
07021348 00000178 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
070214c0 000001a0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070214c0 000001a0 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07021660 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07021660 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07021680 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07021680 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07021718 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07021718 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702172c 00000018 T CTRPluginFramework::Button::Enable(bool)
07021744 00000010 T CTRPluginFramework::Button::Enable()
07021754 00000010 T CTRPluginFramework::Button::Disable()
07021764 00000010 T CTRPluginFramework::Button::Lock()
07021774 00000010 T CTRPluginFramework::Button::Execute()
07021784 00000018 T CTRPluginFramework::Button::SetState(bool)
0702179c 00000010 T CTRPluginFramework::Button::GetState() const
070217ac 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070217b4 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
070217cc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07021850 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07021874 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07021898 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07021898 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070218d0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070218d8 00000008 T CTRPluginFramework::BMPImage::Width() const
070218e0 00000008 T CTRPluginFramework::BMPImage::Height() const
070218e8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070218f0 00000010 T CTRPluginFramework::BMPImage::data() const
07021900 0000001c T CTRPluginFramework::BMPImage::end() const
0702191c 00000014 W CTRPluginFramework::BMPImage::DataClear()
07021930 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07021930 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070219bc 00000034 T CTRPluginFramework::BMPImage::Unload()
070219f0 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07021bc4 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07021c0c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07021c3c 00000128 T CTRPluginFramework::BMPImage::OptimiseForRendering()
07021d64 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
07021e2c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07021e34 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07021f24 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07021ff4 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07022060 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07022084 00000120 T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
070221a4 00000058 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070221a4 00000058 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070221fc 00000314 T CTRPluginFramework::BMPImage::_LoadBitmap()
07022510 000000cc T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022510 000000cc T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070225dc 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07022660 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070229bc 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07022a38 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07022aa8 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07022ae0 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07022b60 0000046c T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07022fcc 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
070231ec 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07023290 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07023350 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07023410 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
070234c0 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07023550 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
070236c8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070237dc 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07023884 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
070238e8 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702397c 00000140 T ARM_Disasm::Decode01(unsigned long)
07023abc 00000028 T ARM_Disasm::Decode10(unsigned long)
07023ae4 00000074 T ARM_Disasm::Decode11(unsigned long)
07023b58 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07023bac 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07023bfc 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07023d14 000000c4 T ARM_Disasm::Decode00(unsigned long)
07023dd8 00000030 T ARM_Disasm::Decode(unsigned long)
07023e08 00000114 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
07023f1c 00000044 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
07023f60 00000360 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
070242c0 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
070245b0 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070245b0 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07024618 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07024634 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07024684 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702471c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702471c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024768 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
07024884 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0702488c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
070248b0 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
070248d4 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
070248f8 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07024920 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07024948 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07024970 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07024a70 00000034 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
07024aa4 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07024bb0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07024bd8 00001ed8 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07026ab0 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07026b60 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07026b80 000000f4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026c74 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07026cf8 00000340 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07027038 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .constprop.0] [clone .isra.0]
07027050 00000018 t __tcf_0
07027068 000000f4 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702715c 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070271f4 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07027278 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
070272d8 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070273cc 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
070273dc 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070273f4 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07027444 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027488 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070274d0 000004e8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070279b8 00000044 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
070279b8 00000044 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
070279fc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07027a1c 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07027a5c 0000012c W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07027b88 000006c0 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07028248 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
070282d8 0000010c t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
070283e4 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07028424 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070284a8 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07028504 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07028558 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0702858c 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07028624 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070286b4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070286b4 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702872c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702872c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702872c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702872c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07028778 000014c4 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07029c3c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07029c3c 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07029dd0 000002bc T CTRPluginFramework::ARCodeEditor::_RenderTop()
0702a08c 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0702a118 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702a118 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702a138 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0702a14c 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a190 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702a1c4 00000128 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702a2ec 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702a328 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0702a38c 00000028 t __tcf_0
0702a3b4 0000030c T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0702a6c0 00000698 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0702ad58 0000011c t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0702ae74 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702af30 00000464 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702b394 000003c4 T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702b758 00000124 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0702b87c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702b904 00000128 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702b904 00000128 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702ba2c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702ba68 000000fc T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702bb64 00000084 T CTRPluginFramework::ARCode::Update()
0702bbe8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702bbe8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702bc0c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702bc34 0000013c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702bc34 0000013c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702bd70 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702bd70 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702bda4 0000003c T CTRPluginFramework::ARCodeContext::Update()
0702bde0 000000a8 T CTRPluginFramework::ARCodeContext::Clear()
0702be88 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702bf48 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0702bf60 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0702bfb4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702c044 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702c0c8 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0702c0f4 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0702c1fc 000001e0 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0702c3dc 00000208 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0702c5e4 0000008c T CTRPluginFramework::Preferences::LoadSettings()
0702c670 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0702c728 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0702c7e0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0702c83c 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
0702c8d8 0000015c T CTRPluginFramework::Preferences::WriteSettings()
0702ca34 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0702ca94 00000004 T CTRPluginFramework::Preferences::Initialize()
0702ca98 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702cb88 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702cbb4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0]
0702cc3c 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702cc98 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0702cccc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702cd5c 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0702cdb8 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0702cdfc 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0702ce7c 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702cf38 00000144 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702d07c 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0702d0b4 0000001c T CTRPluginFramework::InitializeRandomEngine()
0702d0d0 00000258 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0702d328 00000754 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0702da7c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702da84 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702dac8 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
0702db90 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0702dbe4 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0702dc64 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0702dc80 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702dd10 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702dd94 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702ddf0 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
0702de0c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0702de30 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702de54 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0702ded8 0000000c t __tcf_0
0702dee4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702dee4 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702df0c 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702df84 00000048 T CTRPluginFramework::LineWriter::Flush()
0702dfcc 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702dfcc 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702dfe8 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e04c 00000018 T CTRPluginFramework::LineWriter::Close()
0702e064 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0702e064 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0702e090 00000018 T CTRPluginFramework::LineReader::~LineReader()
0702e090 00000018 T CTRPluginFramework::LineReader::~LineReader()
0702e0a8 000000f8 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e1a0 00000014 T CTRPluginFramework::Touch::IsDown()
0702e1b4 00000028 T CTRPluginFramework::Touch::GetPosition()
0702e1dc 00000020 T CTRPluginFramework::Time::AsSeconds() const
0702e1fc 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0702e224 0000002c t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0702e250 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0702e250 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0702e284 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0702e284 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0702e2a4 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0702e2f8 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0702e340 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0702e348 000000fc W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_unique<std::pair<unsigned long, ThreadVars*> >(std::pair<unsigned long, ThreadVars*>&&)
0702e444 000001e0 T __ctrpf_getThreadVars
0702e624 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0702e65c 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0702e694 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0702e694 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0702e698 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0702e69c 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
0702e6cc 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0702e6e0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0702e6e4 00000038 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
0702e71c 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e71c 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702e7c8 00000048 T CTRPluginFramework::Task::Start() const
0702e810 0000004c T CTRPluginFramework::Task::Start(void*) const
0702e85c 00000064 T CTRPluginFramework::Task::Wait() const
0702e8c0 00000010 T CTRPluginFramework::System::IsNew3DS()
0702e8d0 00000010 T CTRPluginFramework::System::Reboot()
0702e8e0 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0702e920 00000010 T CTRPluginFramework::Process::GetHandle()
0702e930 00000010 T CTRPluginFramework::Process::GetTitleID()
0702e940 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e9a0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e9d8 00000024 T CTRPluginFramework::Process::GetTextSize()
0702e9fc 00000008 T CTRPluginFramework::Process::Pause()
0702ea04 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0702ea14 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0702eabc 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0702eac0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0702eb0c 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0702eb2c 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0702eb4c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0702eb6c 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
0702eb90 0000000c T CTRPluginFramework::HookContext::GetCurrent()
0702eb9c 00000030 T CTRPluginFramework::HookContext::GetCallCode()
0702ebcc 00000048 T CTRPluginFramework::Hook::Hook()
0702ebcc 00000048 T CTRPluginFramework::Hook::Hook()
0702ec14 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0702ec14 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0702ec3c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0702ec3c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
0702ec50 00000060 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
0702ecb0 0000004c T CTRPluginFramework::Hook::~Hook()
0702ecb0 0000004c T CTRPluginFramework::Hook::~Hook()
0702ecfc 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0702ed18 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
0702ed40 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
0702ed50 0000001c T CTRPluginFramework::Hook::IsEnabled()
0702ed6c 00000120 T CTRPluginFramework::Hook::Enable()
0702ee8c 00000030 T CTRPluginFramework::Hook::Disable()
0702eebc 00000008 T CTRPluginFramework::Hook::GetContext() const
0702eec4 0000000c T CTRPluginFramework::FwkSettings::Get()
0702eed0 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0702ef9c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702f02c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0702f070 00000080 T CTRPluginFramework::File::Close() const
0702f0f0 000000c0 T CTRPluginFramework::File::Read(void*, unsigned long) const
0702f1b0 000000f8 T CTRPluginFramework::File::Write(void const*, unsigned long)
0702f2a8 00000058 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702f300 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0702f3d8 00000008 T CTRPluginFramework::File::Tell() const
0702f3e0 00000030 T CTRPluginFramework::File::Rewind() const
0702f410 00000030 T CTRPluginFramework::File::Flush() const
0702f440 00000064 T CTRPluginFramework::File::GetSize() const
0702f4a4 00000008 T CTRPluginFramework::File::IsOpen() const
0702f4ac 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0702f4c0 00000044 T CTRPluginFramework::File::File()
0702f4c0 00000044 T CTRPluginFramework::File::File()
0702f504 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0702f504 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0702f524 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f5b8 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f68c 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f710 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f7b0 00000114 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0702f8c4 00000060 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0702f8c4 00000060 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0702f924 00000080 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .constprop.0]
0702f9a4 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702fa3c 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
0702fa48 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702fad8 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702fb34 00000048 T CTRPluginFramework::Directory::Close() const
0702fb7c 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, unsigned char*)
0702fb7c 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, unsigned char*)
0702fc0c 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
0702fc20 00000008 T CTRPluginFramework::Directory::IsOpen() const
0702fc28 00000040 T CTRPluginFramework::Directory::Directory()
0702fc28 00000040 T CTRPluginFramework::Directory::Directory()
0702fc68 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0702fc9c 00000074 T CTRPluginFramework::Directory::~Directory()
0702fc9c 00000074 T CTRPluginFramework::Directory::~Directory()
0702fd10 00000094 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702fda4 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702fe44 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702fee4 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702ffb8 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703004c 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07030198 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07030198 0000005c T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070301f4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030230 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07030230 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0703024c 00000124 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07030370 00000088 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
070303f8 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07030460 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07030514 00000118 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
0703062c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07030670 000001f0 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07030860 000001ac T CTRPluginFramework::Directory::_List() const
07030a0c 000000d8 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07030ae4 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07030bc0 00000020 T CTRPluginFramework::Controller::GetKeysDown()
07030be0 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07030bfc 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
07030c18 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
07030c34 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
07030c50 0000003c T CTRPluginFramework::Controller::Update()
07030c8c 00000018 T CTRPluginFramework::Clock::Clock()
07030c8c 00000018 T CTRPluginFramework::Clock::Clock()
07030ca4 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07030cd0 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07030d08 00000034 T CTRPluginFramework::Clock::Restart()
07030d3c 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07030d40 0000000c T CTRPluginFramework::Sound::Sound()
07030d40 0000000c T CTRPluginFramework::Sound::Sound()
07030d4c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07030d4c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07030d60 00000038 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07030d60 00000038 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07030d98 0000008c T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07030e24 0000006c T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07030e90 00000054 T CTRPluginFramework::Sound::~Sound()
07030e90 00000054 T CTRPluginFramework::Sound::~Sound()
07030ee4 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07030efc 00000018 T CTRPluginFramework::Sound::Play(int, int)
07030f14 00000008 T CTRPluginFramework::Sound::Play(int)
07030f1c 00000008 T CTRPluginFramework::Sound::Play()
07030f24 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07030f24 0000004c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07030f70 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07030f70 00000044 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07030fb4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07030fb4 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07030ff0 00000008 T CTRPluginFramework::MessageBox::operator()() const
07030ff8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07030ff8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07031020 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070310a4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07031134 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07031190 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07031198 000000ac T CTRPluginFramework::Hotkey::AskForKeys()
07031244 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070312c0 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07031398 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07031398 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070313d8 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07031408 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070314cc 0000001c T CTRPluginFramework::HotkeyManager::Count()
070314e8 00000130 T CTRPluginFramework::HotkeyManager::AskForKeys()
07031618 00000144 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
0703175c 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07031790 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07031790 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070317c0 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070317c8 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07031860 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031920 000000ac T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070319cc 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031a5c 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031aec 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07031b7c 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031b7c 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031bc4 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07031bc4 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07031c30 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07031c30 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07031c5c 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07031c64 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07031c80 00000028 T CTRPluginFramework::Keyboard::Open() const
07031ca8 000000bc T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07031d64 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07031e68 000000bc T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07031f24 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07032028 000000bc T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070320e4 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070321e8 00000090 T CTRPluginFramework::Keyboard::Open(float&) const
07032278 000000c8 T CTRPluginFramework::Keyboard::Open(float&, float) const
07032340 0000006c T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
070323ac 00000080 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0703242c 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07032434 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0703243c 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07032444 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07032444 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07032454 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07032454 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07032470 00000394 t cwav_initialize
07032804 000000f4 t cwav_stopImpl.part.0
070328f8 00000004 T cwavUseEnvironment
070328fc 00000034 T cwavSetVAToPACallback
07032930 00000050 T cwavLoad
07032980 000004a4 T cwavPlay
07032e24 00000064 T cwavStop
07032e88 00000170 T cwavFree
07032ff8 0000003c T fontEnsureMappedExtension
07033034 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07033060 00000034 W MemPool::DelBlock(MemBlock*)
07033094 0000005c T MemPool::CoalesceRight(MemBlock*)
070330f0 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
070331f0 00000100 T MemPool::Deallocate(MemChunk const&)
070332f0 00000020 T MemPool::GetFreeSpace()
07033310 0000017c T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703348c 00000030 W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short>(unsigned short const*, unsigned short const*, unsigned short*)
070334bc 000001b4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07033670 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07033670 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07033734 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07033764 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07033798 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07033798 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07033838 0000004c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
07033884 00000038 T CTRPluginFramework::EventManager::Clear()
070338bc 000001c4 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07033a80 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
07033ae8 000002d4 T CTRPluginFramework::EventManager::ProcessEvents()
07033dc0 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07033e8c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07033e94 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07033e94 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07033f58 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07033f60 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
07033f78 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07033f78 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07033fa0 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07034200 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07034478 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070346d8 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703470c 000002f4 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07034a00 00000084 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07034a84 000000b4 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07034a84 000000b4 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07034b38 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07034b38 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07034b74 0000001c T CTRPluginFramework::SubMenu::operator()()
07034b90 00000208 T CTRPluginFramework::SubMenu::Draw()
07034d98 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07034e78 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07034e80 000001f0 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07035070 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0703508c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070350a0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070350b4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070350c8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070350cc 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070350d0 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070350f8 00000064 t __tcf_0
0703515c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070351e0 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07035244 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070352dc 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07035310 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07035354 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070353e4 00000148 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0703552c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07035588 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07035708 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07035898 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07035958 000000fc W std::__cxx11::to_string(int)
07035a54 0000014c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035ba0 00000048 t CTRPluginFramework::Reboot()
07035be8 00000054 t CTRPluginFramework::Shutdown()
07035c3c 00000020 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07035c5c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07035c70 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07035c84 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07035c98 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07035cac 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07035cc0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07035cd4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07035ce8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07035cfc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07035d10 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07035e60 00000a98 T CTRPluginFramework::PluginMenuTools::InitMenu()
070368f8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070368f8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07036a88 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07036b94 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07036bd4 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07036bd4 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07036c6c 00000120 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07036d8c 00000208 t CTRPluginFramework::UpdateScreenshotText()
07036f94 0000012c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
070370c0 00000160 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07037220 00000450 t CTRPluginFramework::ScreenshotMenuCallback()
07037670 000005e4 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07037c54 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07037c74 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07037cbc 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07037cf8 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07037d08 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07037d8c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037de8 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07037e48 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07037f60 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07037fb8 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07037fc8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07038134 000004c4 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07038134 000004c4 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070385f8 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070386a4 000004c0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07038b64 00000120 t CTRPluginFramework::ClearSearchFolder()
07038c84 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07038cb8 0000028c T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07038f44 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07038f70 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07038fe0 000000e8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070390c8 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07039104 0000025c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07039360 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07039444 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07039484 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070394b4 00000308 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070397bc 000003b0 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07039b6c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07039bf0 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07039c80 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07039cdc 000000f0 W std::__cxx11::to_string(unsigned long)
07039dcc 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07039e48 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07039efc 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703a088 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703a0d0 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703a218 00000154 T CTRPluginFramework::SearchMenu::_ExportAll()
0703a36c 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703a36c 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703a428 00000584 T CTRPluginFramework::SearchMenu::Draw()
0703a9ac 00000118 T CTRPluginFramework::SearchMenu::_ShowGame()
0703aac4 00000240 T CTRPluginFramework::SearchMenu::Update()
0703ad08 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b218 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0703b238 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703b238 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703b258 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703b274 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0703b2cc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703b2cc 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703b360 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b360 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b3c0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b3c0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703b420 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0703b424 00000030 t CTRPluginFramework::GetIndex(int)
0703b454 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703b4e4 00000098 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0703b57c 00000124 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0703b6a0 00000078 T CTRPluginFramework::HotkeysModifier::_Update()
0703b718 00000188 T CTRPluginFramework::HotkeysModifier::operator()()
0703b8a0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703b8a0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703b90c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0703b938 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703b938 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703b968 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0703ba78 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703bab4 00000150 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703bab4 00000150 T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703bc04 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0703bc58 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703bcdc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703bcdc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703bd28 00000338 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703c060 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703c110 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703c24c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703c274 0000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c300 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703c3f0 000002cc T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703c6bc 00000370 T CTRPluginFramework::GatewayRAMDumper::operator()()
0703ca2c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703cabc 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cabc 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cc34 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cc34 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cd8c 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0703ce50 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0703d110 000001a0 T CTRPluginFramework::MessageBoxImpl::operator()()
0703d2b0 00000004 T cwav_defaultVAToPA
0703d2b4 00000004 T cwavEnvUseEnvironment
0703d2b8 00000008 T cwavEnvGetEnvironment
0703d2c0 00000004 T cwavEnvInitialize
0703d2c4 00000004 T cwavEnvFinalize
0703d2c8 00000014 T cwavEnvCompatibleEncoding
0703d2dc 00000008 T cwavEnvGetChannelAmount
0703d2e4 00000018 T cwavEnvIsChannelAvailable
0703d2fc 000000f8 T cwavEnvPlay
0703d3f4 00000004 T cwavEnvChannelIsPlaying
0703d3f8 00000004 T cwavEnvStop
0703d3fc 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703d440 00000048 T CTRPluginFramework::Search::Cancel()
0703d488 00000190 T CTRPluginFramework::Search::CheckNextRegion()
0703d618 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703d69c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703d6f8 00000008 T CTRPluginFramework::Search::GetHeader() const
0703d700 00000050 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0703d750 0000000c T CTRPluginFramework::Search::GetType() const
0703d75c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0703d774 00000070 T CTRPluginFramework::Search::WriteHeader()
0703d7e4 000002fc T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703d7e4 000002fc T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703dae0 00000058 T CTRPluginFramework::Search::WriteResults()
0703db38 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703db80 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0703ddc0 000000e8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0703dea8 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0703df2c 000001d4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703df2c 000001d4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e100 00000140 T CTRPluginFramework::Search::ExecuteSearch()
0703e240 000000c8 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703e308 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703e3c8 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703e424 0000005c W CTRPluginFramework::Search::~Search()
0703e424 0000005c W CTRPluginFramework::Search::~Search()
0703e480 00000044 T CTRPluginFramework::Search32::~Search32()
0703e480 00000044 T CTRPluginFramework::Search32::~Search32()
0703e4c4 0000001c T CTRPluginFramework::Search32::~Search32()
0703e4e0 0000001c W CTRPluginFramework::Search::~Search()
0703e4fc 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703e4fc 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703e700 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e700 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e720 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703e720 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703e7b4 0000012c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703e8e0 000001ac T CTRPluginFramework::Search32::SecondSearchSpecified()
0703ea8c 00000118 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703eba4 00000198 T CTRPluginFramework::Search32::SecondSearchUnknown()
0703ed3c 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703ee94 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703eee0 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0703f024 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703f168 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0703f1a4 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0703f20c 000000f0 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703f2fc 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0703f338 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0703f3b8 00000110 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703f4c8 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703f514 00000324 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0703f838 000008b0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070400e8 000008a8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040990 00000868 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070411f8 00000c30 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041e28 00000450 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042278 00000454 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070426cc 0000044c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042b18 00000618 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043130 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043d94 00000718 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070444ac 000003fc T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070448a8 000006b8 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044f60 00000848 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070457a8 000008a8 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046050 00000894 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070468e4 00000dac T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047690 0000000c T __sync_init
0704769c 00000018 T __sync_fini
070476b4 0000002c T syncArbitrateAddressWithTimeout
070476e0 0000001c T LightLock_Init
070476fc 00000094 T LightLock_Lock
07047790 00000040 T LightLock_Unlock
070477d0 00000024 T RecursiveLock_Init
070477f4 00000030 T RecursiveLock_Lock
07047824 00000078 T RecursiveLock_TryLock
0704789c 00000054 T RecursiveLock_Unlock
070478f0 00000040 T LightEvent_Init
07047930 000000a4 T LightEvent_Clear
070479d4 00000048 T LightEvent_Pulse
07047a1c 000000c8 T LightEvent_Signal
07047ae4 000000b0 T LightEvent_Wait
07047b94 00000014 T LightSemaphore_Init
07047ba8 00000094 T LightSemaphore_Acquire
07047c3c 00000064 T LightSemaphore_Release
07047ca0 00000084 W envGetHandle
07047d24 00000050 W envDestroyHandles
07047d74 00000074 T osConvertVirtToPhys
07047de8 00000054 T osGetTimeRef
07047e3c 000000ec T osGetTime
07047f28 0000009c T fontEnsureMapped
07047fc4 000000f8 T fontGlyphIndexFromCodePoint
070480bc 0000006c T fontGetCharWidthInfo
07048128 00000124 T srvInit
0704824c 00000058 T srvExit
070482a4 00000080 T srvGetServiceHandleDirect
07048324 00000048 T srvGetServiceHandle
0704836c 00000038 T srvPublishToSubscriber
070483a4 00000094 t mappableFindAddressWithin
07048438 00000028 T mappableInit
07048460 00000080 T mappableAlloc
070484e0 00000004 T mappableFree
070484e4 000000a4 T cfguInit
07048588 0000003c T cfguExit
070485c4 00000054 T CFGU_GetSystemLanguage
07048618 000000f0 T gspExit
07048708 0000008c T acInit
07048794 0000003c T acExit
070487d0 000000a4 T amInit
07048874 0000003c T amExit
070488b0 0000015c T aptSendCommand
07048a0c 00000030 T aptHook
07048a3c 00000030 T aptUnhook
07048a6c 00000028 T APT_PrepareToCloseApplication
07048a94 00000048 T APT_CloseApplication
07048adc 0000007c T APT_CheckNew3DS
07048b58 00000048 T APT_GetSharedFont
07048ba0 00000024 W hidShouldUseIrrst
07048bc4 0000018c T hidInit
07048d50 000000e8 T hidExit
07048e38 000002a4 T hidScanInput
070490dc 00000010 T hidKeysHeld
070490ec 00000010 T hidKeysDown
070490fc 00000010 T hidKeysUp
0704910c 00000018 T hidTouchRead
07049124 0000000c T srvPmGetSessionHandle
07049130 000000c8 T fsInit
070491f8 0000003c T fsExit
07049234 000000cc T FSUSER_OpenFile
07049300 000000bc T FSUSER_DeleteFile
070493bc 000000f8 T FSUSER_RenameFile
070494b4 000000bc T FSUSER_DeleteDirectoryRecursively
07049570 000000d4 T FSUSER_CreateFile
07049644 000000c4 T FSUSER_CreateDirectory
07049708 000000f8 T FSUSER_RenameDirectory
07049800 000000b4 T FSUSER_OpenDirectory
070498b4 00000094 T FSUSER_OpenArchive
07049948 00000058 T FSFILE_Read
070499a0 00000060 T FSFILE_Write
07049a00 00000038 T FSFILE_GetSize
07049a38 00000028 T FSFILE_SetSize
07049a60 0000003c T FSFILE_Close
07049a9c 00000024 T FSFILE_Flush
07049ac0 00000028 T FSFILE_SetPriority
07049ae8 00000050 T FSDIR_Read
07049b38 0000003c T FSDIR_Close
07049b74 00000010 T rbtree_init
07049b84 000001a8 t do_insert
07049d2c 00000008 T rbtree_insert
07049d34 00000090 T rbtree_rotate
07049dc4 00000338 T rbtree_remove
0704a0fc 00000074 T rbtree_find
0704a170 00000060 T encode_utf16
0704a1d0 000000fc T encode_utf8
0704a2cc 000000e8 T utf16_to_utf8
0704a3b4 00000064 T decode_utf16
0704a418 0000013c T decode_utf8
0704a554 000000c0 T utf8_to_utf16
0704a614 T svcQueryMemory
0704a644 T svcExitProcess
0704a64c T svcCreateThread
0704a66c T svcExitThread
0704a674 T svcSleepThread
0704a67c T svcSetThreadPriority
0704a684 T svcReleaseMutex
0704a68c T svcCreateEvent
0704a6a0 T svcSignalEvent
0704a6a8 T svcClearEvent
0704a6b0 T svcMapMemoryBlock
0704a6b8 T svcUnmapMemoryBlock
0704a6c0 T svcCreateAddressArbiter
0704a6d4 T svcArbitrateAddress
0704a6ec T svcArbitrateAddressNoTimeout
0704a6f4 T svcCloseHandle
0704a6fc T svcWaitSynchronization
0704a704 T svcWaitSynchronizationN
0704a72c T svcDuplicateHandle
0704a740 T svcGetSystemTick
0704a748 T svcGetSystemInfo
0704a760 T svcGetProcessInfo
0704a778 T svcConnectToPort
0704a78c T svcSendSyncRequest
0704a794 T svcOpenProcess
0704a7a8 T svcBreak
0704a7b0 T svcInvalidateProcessDataCache
0704a7b8 T svcFlushProcessDataCache
0704a7c0 T svcKernelSetState
0704a7c8 T svcQueryProcessMemory
0704a7ec 00000160 T irrstInit
0704a94c 000000cc T irrstExit
0704aa18 000000b4 T irrstScanInput
0704aacc 00000024 T irrstKeysHeld
0704aaf0 00000058 T rbtree_node_next
0704ab48 00000004 T operator delete(void*)
0704ab4c 00000004 T operator delete(void*, std::nothrow_t const&)
0704ab50 00000004 T operator delete[](void*)
0704ab54 00000060 T __cxa_guard_acquire
0704abb4 0000000c T __cxa_guard_release
0704abc0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704abc0 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704abe0 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ac0c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ac0c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ac1c 00000014 T std::get_new_handler()
0704ac30 0000005c T operator new(unsigned int)
0704ac8c 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704aca8 00000004 T operator new[](unsigned int)
0704acac 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704acac 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704accc 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704acf8 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704ad64 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704ae40 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ae84 00000004 T std::type_info::~type_info()
0704ae84 00000004 T std::type_info::~type_info()
0704ae88 00000008 T std::type_info::__is_pointer_p() const
0704ae88 00000008 T std::type_info::__is_function_p() const
0704ae90 0000004c T std::type_info::operator==(std::type_info const&) const
0704aedc 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704aef4 00000014 T std::__detail::_List_node_base::_M_unhook()
0704af08 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704af78 00000288 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704b200 0000002c T std::__throw_bad_alloc()
0704b22c 0000002c T std::__throw_bad_array_new_length()
0704b258 00000048 T std::__throw_logic_error(char const*)
0704b2a0 00000048 T std::__throw_invalid_argument(char const*)
0704b2e8 00000048 T std::__throw_length_error(char const*)
0704b330 00000048 T std::__throw_out_of_range(char const*)
0704b378 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704b3f4 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704b4c8 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704b5a8 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704b5b4 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0704b624 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
0704b6a4 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
0704b7d0 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704b828 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0704b83c 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0704b8c0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0704b8e8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0704b90c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704b930 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704b9ec 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0704baec 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704bb68 000000dc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704bc44 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0704bce0 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0704bd50 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0704bdc4 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0704be08 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0704be20 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0704bf44 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
0704bf80 0000028c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0704c20c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704c254 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0704c2bc 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704c34c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704c35c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704c36c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0704c3bc 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0704c460 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704c470 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0704c4e8 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0704c51c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704c570 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0704c620 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704c620 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0704c66c 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0704c6cc 0000000c T std::bad_alloc::what() const
0704c6d8 00000020 T std::bad_alloc::~bad_alloc()
0704c6d8 00000020 T std::bad_alloc::~bad_alloc()
0704c6f8 0000002c T std::bad_alloc::~bad_alloc()
0704c724 0000000c T std::bad_array_new_length::what() const
0704c730 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704c730 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704c750 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704c77c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704c7d8 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704c7ec 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704c7ec 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704c80c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704c838 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704c8a0 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704c8cc 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704c910 00000004 T operator delete(void*, unsigned int)
0704c914 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704c9e4 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704ca7c 00000044 T __cxa_allocate_exception
0704cac0 00000030 T __cxa_free_exception
0704caf0 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704cb30 T __cxa_end_cleanup
0704cb40 00000134 T __cxa_type_match
0704cc74 000000b4 T __cxa_begin_cleanup
0704cd28 000000b4 T __gnu_end_cleanup
0704cddc 000000cc T __cxa_begin_catch
0704cea8 000000e0 T __cxa_end_catch
0704cf88 00000004 T std::exception::~exception()
0704cf88 00000004 T std::exception::~exception()
0704cf8c 00000004 T std::bad_exception::~bad_exception()
0704cf8c 00000004 T std::bad_exception::~bad_exception()
0704cf90 0000000c T transaction clone for std::exception::what() const
0704cf90 0000000c T std::exception::what() const
0704cf9c 0000000c T transaction clone for std::bad_exception::what() const
0704cf9c 0000000c T std::bad_exception::what() const
0704cfa8 00000018 T std::bad_exception::~bad_exception()
0704cfc0 0000000c T __cxa_get_globals_fast
0704cfcc 0000000c T __cxa_get_globals
0704cfd8 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0704d144 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0704d1a4 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0704d27c 000006f8 T __gxx_personality_v0
0704d974 00000014 T __cxxabiv1::__terminate(void (*)())
0704d988 00000018 T std::terminate()
0704d9a0 0000000c T __cxxabiv1::__unexpected(void (*)())
0704d9ac 00000018 T std::unexpected()
0704d9c4 00000014 T std::get_terminate()
0704d9d8 00000014 T std::get_unexpected()
0704d9ec 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0704da5c 00000070 T __cxa_init_primary_exception
0704dacc 00000058 T __cxa_throw
0704db24 000000b0 T __cxa_rethrow
0704dbd4 00000008 T std::logic_error::what() const
0704dbd4 00000008 T std::runtime_error::what() const
0704dbdc 00000064 T std::logic_error::~logic_error()
0704dbdc 00000064 T std::logic_error::~logic_error()
0704dc40 00000064 T std::length_error::~length_error()
0704dc40 00000064 T std::length_error::~length_error()
0704dca4 00000064 T std::out_of_range::~out_of_range()
0704dca4 00000064 T std::out_of_range::~out_of_range()
0704dd08 00000064 T std::invalid_argument::~invalid_argument()
0704dd08 00000064 T std::invalid_argument::~invalid_argument()
0704dd6c 0000006c T std::logic_error::~logic_error()
0704ddd8 0000006c T std::out_of_range::~out_of_range()
0704de44 0000006c T std::invalid_argument::~invalid_argument()
0704deb0 0000006c T std::length_error::~length_error()
0704df1c 000000d4 T std::logic_error::logic_error(char const*)
0704df1c 000000d4 T std::logic_error::logic_error(char const*)
0704dff0 00000020 T std::invalid_argument::invalid_argument(char const*)
0704dff0 00000020 T std::invalid_argument::invalid_argument(char const*)
0704e010 00000020 T std::length_error::length_error(char const*)
0704e010 00000020 T std::length_error::length_error(char const*)
0704e030 00000020 T std::out_of_range::out_of_range(char const*)
0704e030 00000020 T std::out_of_range::out_of_range(char const*)
0704e050 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704e0d8 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704e0dc 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0704e14c 0000002c T __cxa_call_terminate
0704e178 00000154 T __cxa_call_unexpected
0704e2d0 0000028c T log2
0704e55c 00000024 t with_errno
0704e580 00000050 T __math_divzero
0704e5d0 0000001c T __math_invalid
0704e5f0 00000164 T ceil
0704e754 000000b8 T ceilf
0704e810 00000174 T floor
0704e984 00000070 T roundf
0704e9f4 00000044 T __popcountsi2
0704ea38 00000030 T __aeabi_f2lz
0704ea38 00000030 T __fixsfdi
0704ea68 00000040 T __aeabi_f2ulz
0704ea68 00000040 T __fixunssfdi
0704eaa8 00000120 T __udivmoddi4
0704ebc8 00000018 t selfrel_offset31
0704ebe0 00000090 t search_EIT_table
0704ec70 00000040 t __gnu_unwind_get_pr_addr
0704ecb0 00000108 t get_eit_entry
0704edb8 00000088 t restore_non_core_regs
0704ee40 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0704ee54 00000004 t _Unwind_DebugHook
0704ee58 00000064 t unwind_phase2
0704eebc 00000134 t unwind_phase2_forced
0704eff0 000000a4 T __gnu_Unwind_RaiseException
0704f094 00000028 T __gnu_Unwind_ForcedUnwind
0704f0bc 00000074 T __gnu_Unwind_Resume
0704f130 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704f150 00000004 T _Unwind_Complete
0704f154 00000018 T _Unwind_DeleteException
0704f16c 0000005c T _Unwind_VRS_Get
0704f1c8 0000002c t _Unwind_GetGR
0704f1f4 0000005c T _Unwind_VRS_Set
0704f250 0000002c t _Unwind_SetGR
0704f27c 000000c0 T __gnu_Unwind_Backtrace
0704f33c 0000041c t __gnu_unwind_pr_common
0704f758 00000008 T __aeabi_unwind_cpp_pr0
0704f760 00000008 W __aeabi_unwind_cpp_pr1
0704f768 00000008 W __aeabi_unwind_cpp_pr2
0704f770 000003f4 T _Unwind_VRS_Pop
0704fb64 00000064 t next_unwind_byte
0704fbc8 0000002c t _Unwind_GetGR.constprop.0
0704fbf4 00000004 t unwind_UCB_from_context
0704fbf8 0000040c T __gnu_unwind_execute
07050004 00000048 T __gnu_unwind_frame
0705004c 00000010 T _Unwind_GetRegionStart
0705005c 0000001c T _Unwind_GetLanguageSpecificData
07050078 00000008 T _Unwind_GetDataRelBase
07050080 00000008 T _Unwind_GetTextRelBase
07050088 00000014 T atexit
0705009c 00000028 T calloc
070500c4 000000bc T _calloc_r
07050180 00000010 T ctime
07050190 0000000c T __errno
0705019c 00000160 T _fclose_r
070502fc 00000258 T __sflush_r
07050554 00000094 T _fflush_r
070505e8 0000000c T _cleanup_r
070505f4 00000184 T __sinit
07050778 0000000c T __sfp_lock_acquire
07050784 0000000c T __sfp_lock_release
07050790 000000f8 T _malloc_trim_r
07050888 000002e4 T _free_r
07050b6c 00000070 T _fwalk_reent
07050bdc 0000007c T __libc_init_array
07050c58 00000018 T isspace
07050c70 00000018 T isxdigit
07050c88 00000020 T localtime
07050ca8 0000038c T localtime_r
07051034 00000138 T __smakebuf_r
0705116c 00000028 T memalign
07051194 00000150 T _memalign_r
070512e4 00000020 T malloc
07051304 00000020 T free
07051324 000007e0 T _malloc_r
07051b04 000000e0 T memchr
07051be4 000000a8 T memcmp
07051c8c 0000011c T memcpy
07051da8 00000154 T memmove
07051efc 00000118 T memset
07052014 0000000c T __malloc_lock
07052020 0000000c T __malloc_unlock
0705202c 00000028 T realloc
07052054 00000558 T _realloc_r
070525ac 000000cc T snprintf
07052678 00000064 T sprintf
070526dc 00000044 T __sread
07052720 00000008 T __seofread
07052728 00000068 T __swrite
07052790 00000048 T __sseek
070527d8 00000008 T __sclose
070527e0 00000128 t iso_year_adjust
07052908 00001094 t __strftime.isra.0
0705399c 00000004 T strftime
070539a0 0000005c T strlen
070539fc 000000dc T strncmp
07053ad8 000000c0 T strncpy
07053b98 00000048 T strnlen
07053be0 00001368 T _strtod_l
07054f48 000000c4 T strtof
0705500c 000001c4 t _strtoul_l.constprop.0
070551d0 00000004 T _strtoul_r
070551d4 00000030 T strtoul
07055204 00000628 t get_arg
07055830 000035b8 T _svfprintf_r
07058de8 0000003c T time
07058e24 00000248 T __tzcalc_limits
0705906c 0000000c T __tz_lock
07059078 0000000c T __tz_unlock
07059084 00000010 T _tzset_unlocked
07059094 00000474 T _tzset_unlocked_r
07059508 000000a4 T _vsnprintf_r
070595ac 00000038 T vsnprintf
070595e4 00000054 T _wcrtomb_r
07059638 00000028 T _wcsrtombs_r
07059660 0000000c T abs
0705966c 00000020 T asctime
0705968c 00000080 T asctime_r
0705970c 000000b0 T __register_exitproc
070597bc 000001ac t quorem
07059968 000012cc T _dtoa_r
0705ac34 000000ec t rshift
0705ad20 00000904 T __gethex
0705b624 0000004c T __match
0705b670 0000029c T __hexnan
0705b90c 000000c8 T _findenv_r
0705b9d4 00000018 T _getenv_r
0705b9ec 0000000c T __gettzinfo
0705b9f8 00000250 T gmtime_r
0705bc48 0000000c T labs
0705bc54 0000000c T _localeconv_r
0705bc60 00000010 T __locale_mb_cur_max
0705bc70 000002e4 T __utf8_mbtowc
0705bf54 00000088 T _Balloc
0705bfdc 0000001c T _Bfree
0705bff8 000000f4 T __multadd
0705c0ec 00000110 T __s2b
0705c1fc 00000058 T __hi0bits
0705c254 00000094 T __lo0bits
0705c2e8 000000a4 T __i2b
0705c38c 00000204 T __multiply
0705c590 00000120 T __pow5mult
0705c6b0 0000013c T __lshift
0705c7ec 00000058 T __mcmp
0705c844 000001cc T __mdiff
0705ca10 00000074 T __ulp
0705ca84 000000d0 T __b2d
0705cb54 00000124 T __d2b
0705cc78 00000078 T __ratio
0705ccf0 00000088 T __copybits
0705cd78 0000005c T __any_on
0705cdd4 0000000c T nanf
0705cde0 000000a8 T frexp
0705ce88 00000064 T siprintf
0705ceec 00000074 T siscanf
0705cf60 00000010 T nan
0705cf70 000000cc T sniprintf
0705d03c 000000f0 T strcpy
0705d12c 000001a4 t _strtol_l.part.0
0705d2d0 0000003c T _strtol_r
0705d30c 00000628 t get_arg
0705d934 00000190 T __ssprint_r
0705dac4 00002274 T _svfiprintf_r
0705fd38 00000050 t get_arg
0705fd88 000000e0 T _sungetc_r
0705fe68 0000006c T __ssrefill_r
0705fed4 000000c8 T _sfread_r
0705ff9c 000022a0 T __ssvfiscanf_r
0706223c 000000a8 T __submore
070622e4 00000190 T _wcsnrtombs_l
07062474 0000004c T _wcsnrtombs_r
070624c0 000000f0 T __utf8_wctomb
070625b0 00000054 T __assert_func
07062604 0000000c T __env_lock
07062610 0000000c T __env_unlock
0706261c 0000003c T fiprintf
07062658 00000008 T iswspace
07062660 00000068 T _mbrtowc_r
070626c8 000000e4 T __sccl
070627ac 0000022c t _strtoll_l.constprop.0
070629d8 00000004 T _strtoll_r
070629dc 00000244 t _strtoull_l.constprop.0
07062c20 00000004 T _strtoull_r
07062c24 00000628 t get_arg
0706324c 00000030 T __sprint_r
0706327c 0000233c T _vfiprintf_r
070655b8 000000d4 t __sbprintf
0706568c 00000154 T __swsetup_r
070657e0 000004c0 T __sfvwrite_r
07065ca0 0000003c T iswspace_l
07065cdc 000001d4 t __jp2uc
07065eb0 0000009c T _jp2uc_l
07065f4c 00000084 T category
07065fd0 00000008 t null_write
07065fd8 00000078 T _fstat_r
07066050 00000030 T _gettimeofday_r
07066080 00000008 T _isatty_r
07066088 00000084 T _lseek_r
0706610c 00000080 T _read_r
0706618c 00000078 T _sbrk_r
07066204 00000080 T _write_r
07066284 00000008 T __flockfile
0706628c 00000008 T __funlockfile
07066294 0000003c T __get_handle
070662d0 000000f4 T _close_r
070663c4 0000002c T __getreent
070663f0 0000001c T __libc_lock_acquire
0706640c 0000001c T __libc_lock_release
07066428 0000001c T __libc_lock_init_recursive
07066444 0000001c T __libc_lock_acquire_recursive
07066460 0000001c T __libc_lock_release_recursive
0706647c 0000001c T __libc_lock_close_recursive
07066498 00000038 T __aeabi_d2lz
07066498 00000038 T __fixdfdi
070664d0 00000040 T __aeabi_d2ulz
070664d0 00000040 T __fixunsdfdi
07066510 T _fini
0706674c 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07066750 00000004 R CTRPluginFramework::Color::ForestGreen
07066754 00000004 R CTRPluginFramework::Color::Red
07066758 00000004 R CTRPluginFramework::Color::Blue
0706675c 00000004 R CTRPluginFramework::Color::Cyan
07066760 00000004 R CTRPluginFramework::Color::Gray
07066764 00000004 R CTRPluginFramework::Color::Black
07066768 00000004 R CTRPluginFramework::Color::Brown
0706676c 00000004 R CTRPluginFramework::Color::Green
07066770 00000004 R CTRPluginFramework::Color::White
07066774 00000004 R CTRPluginFramework::Color::Orange
07066778 00000004 R CTRPluginFramework::Color::Silver
0706677c 00000004 R CTRPluginFramework::Color::Yellow
07066780 00000004 R CTRPluginFramework::Color::DimGrey
07066784 00000004 R CTRPluginFramework::Color::Magenta
07066788 00000004 R CTRPluginFramework::Color::SkyBlue
0706678c 00000004 R CTRPluginFramework::Color::DarkGrey
07066790 00000004 R CTRPluginFramework::Color::BlackGrey
07066794 00000004 R CTRPluginFramework::Color::Gainsboro
07066798 00000004 R CTRPluginFramework::Color::LimeGreen
0706688f 00000005 r CSWTCH.72
070669e8 00000014 r CTRPluginFramework::defaultSoundFiles
07066a48 00000030 r CTRPluginFramework::g_byme
07066a78 00000048 r CTRPluginFramework::g_ctrpf
07066b68 00000014 V vtable for CTRPluginFramework::MenuItem
07066b7c 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07066b90 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07066d80 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07066d88 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07066ef4 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07066f14 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07066f34 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07066f54 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07066f90 0000001c R vtable for CTRPluginFramework::TouchKey
07066fac 0000001c R vtable for CTRPluginFramework::TextBox
07066fc8 00000a00 r font
07067a40 00000058 r CTRPluginFramework::g_OSDPattern
07067a98 0000001c R vtable for CTRPluginFramework::NumericTextBox
07067ab4 0000001c R vtable for CTRPluginFramework::FloatingButton
07067ad0 0000001c R vtable for CTRPluginFramework::ComboBox
07067aec 0000001c R vtable for CTRPluginFramework::Button
07067b08 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07068110 00000040 r cond_names
07068150 00000010 r shift_names
07068160 00000040 r RegNames
070681a0 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07068a84 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07068b04 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07068b0c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07068b18 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07068b2c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07068b34 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07068cf0 00000008 R CTRPluginFramework::Time::Zero
07068cf8 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<CTRPluginFramework::TaskContext>, (__gnu_cxx::_Lock_policy)0>
07068d14 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07068d1c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07068dba 00000384 r UserManualFilled15_array
0706913e 00000384 r Unsplash15_array
070694c2 00000384 r UnCheckedCheckbox_array
07069846 000009c4 r TrashFilled25_array
0706a20a 000009c4 r Trash25_array
0706abce 00000384 r Star15_array
0706af52 00000384 r Shutdown15_array
0706b2d6 00000384 r Settings15_array
0706b65a 00000384 r Search15_array
0706b9de 000009c4 r Save25_array
0706c3a2 00001900 r Rocket40_array
0706dca2 00000384 r Restart15_array
0706e026 00000384 r RAM15_array
0706e3aa 000009c4 r PlusFilled25_array
0706ed6e 000009c4 r Plus25_array
0706f732 00000384 r More15_array
0706fab6 00000384 r Maintenance15_array
0706fe3a 000009c4 r KeyboardFilled25_array
070707fe 000009c4 r Keyboard25_array
070711c2 000009c4 r InfoFilled25_array
07071b86 000009c4 r Info25_array
0707254a 00000384 r HandCursor15_array
070728ce 00000384 r Grid15_array
07072c52 000009c4 r GameControllerFilled25_array
07073616 000009c4 r GameController25_array
07073fda 00000384 r GameController15_array
0707435e 00000384 r FolderFilled_array
070746e2 00000384 r File15_array
07074a66 00000384 r EnterKeyFilled15_array
07074dea 00000384 r EnterKey15_array
0707516e 000009c4 r EditFilled25_array
07075b32 000009c4 r Edit25_array
070764f6 000009c4 r DuplicateFilled25_array
07076eba 000009c4 r Duplicate25_array
0707787e 00000e10 r DefaultKeyboardCustomIcon_array
0707868e 000009c4 r CutFilled25_array
07079052 000009c4 r Cut25_array
07079a16 00000384 r Controller15_array
07079d9a 00000640 r CloseWindowFilled20_array
0707a3da 00000640 r CloseWindow20_array
0707aa1a 000009c4 r ClipboardFilled25_array
0707b3de 000009c4 r Clipboard25_array
0707bda2 00000384 r ClearSymbolFilled15_array
0707c126 00000384 r ClearSymbol15_array
0707c4aa 00000384 r CheckedCheckbox_array
0707c82e 00000384 r CapsLockOnFilled15_array
0707cbb2 00000384 r CapsLockOn15_array
0707cf36 000009c4 r AddFavoriteFilled25_array
0707d8fa 000009c4 r AddFavorite25_array
0707e2be 00000384 r About15_array
0707ecaf 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0707ed78 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0707f048 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0707f074 00000038 r CTRPluginFramework::ktable
0707f0ac 00000038 r CTRPluginFramework::stable
0707f284 00000038 R vtable for CTRPluginFramework::Search
0707f2e8 00000038 R vtable for CTRPluginFramework::Search32
0707f3a8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0707f3b4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707f3d8 00000014 R vtable for __gnu_cxx::recursive_init_error
0707f3ec 00000001 R std::nothrow
0707f3f0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707f3fc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0707f424 0000002c R vtable for __cxxabiv1::__si_class_type_info
0707f450 00000008 R typeinfo for std::type_info
0707f458 0000000d R typeinfo name for std::type_info
0707f468 00000404 R std::__detail::__prime_list
0707f86c 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0707f87c 00000018 V typeinfo name for std::_Sp_make_shared_tag
0707f894 00000008 V typeinfo for std::_Sp_make_shared_tag
0707fa38 0000000c R typeinfo for std::bad_alloc
0707fa44 0000000d R typeinfo name for std::bad_alloc
0707fa54 00000014 R vtable for std::bad_alloc
0707fa84 0000000c R typeinfo for std::bad_array_new_length
0707fa90 00000019 R typeinfo name for std::bad_array_new_length
0707faac 00000014 R vtable for std::bad_array_new_length
0707fac0 0000000c R typeinfo for __cxxabiv1::__class_type_info
0707facc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0707faf0 0000002c R vtable for __cxxabiv1::__class_type_info
0707fb40 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707fb48 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0707fb50 0000000c R typeinfo for std::bad_exception
0707fb5c 00000008 R typeinfo for std::exception
0707fb64 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0707fb84 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707fba8 00000012 R typeinfo name for std::bad_exception
0707fbbc 0000000d R typeinfo name for std::exception
0707fbcc 00000014 R vtable for std::bad_exception
0707fbe0 0000000c R typeinfo for std::logic_error
0707fbec 0000000c R typeinfo for std::length_error
0707fbf8 0000000c R typeinfo for std::out_of_range
0707fc04 0000000c R typeinfo for std::invalid_argument
0707fc10 00000010 R typeinfo name for std::logic_error
0707fc20 00000011 R typeinfo name for std::length_error
0707fc34 00000011 R typeinfo name for std::out_of_range
0707fc48 00000015 R typeinfo name for std::invalid_argument
0707fc60 00000014 R vtable for std::logic_error
0707fc74 00000014 R vtable for std::length_error
0707fc88 00000014 R vtable for std::out_of_range
0707fc9c 00000014 R vtable for std::invalid_argument
0707fcf8 00000890 R __log2_data
07080588 00000004 R _global_impure_ptr
0708058c 00000060 R __month_lengths
07080678 00000014 r fpi.1
0708068c 00000014 r fpinan.0
070806a0 00000028 r tinytens
07080704 00000010 r blanks.1
07080714 00000010 r zeroes.0
0708087c 000000fc R _C_time_locale
070809ec 00000015 r day_name.1
07080a04 00000024 r mon_name.0
07080a28 00000101 R _ctype_
07080bdc 00000100 R __hexdig
07080ce0 0000000c R _C_numeric_locale
07080d70 00000028 R __mprec_bigtens
07080d98 000000c8 R __mprec_tens
07080e60 0000000c r p05.0
07080e6c 0000006c R __action_table
07080ed8 00000100 R __chclass
07080fd8 0000006c R __state_table
07081044 00000010 r blanks.1
07081054 00000010 r zeroes.0
07081064 00000022 r basefix.0
070810c8 00000010 r blanks.1
070810d8 00000010 r zeroes.0
070810fc 000000bc r a1
070811b8 000000bc r a2
07081274 0000005b r a3
070812d0 00000070 r a6
07081340 000000a2 r a7
070813e4 00000040 r a8
07081424 0000172a r b02cf
07082b50 00001a7c r d02f4
070845cc 000031e6 r categories
070877bc 00000070 R dotab_stdnull
07087948 R __exidx_start
07087c00 R __exidx_end
07087c00 00000004 D cwavCurrentVAPAConvCallback
07087c04 00000001 D CTRPluginFramework::g_keepRunning
07087c05 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07087c06 00000001 D CTRPluginFramework::SystemImpl::Language
07087c08 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07087c0c 00000004 D CTRPluginFramework::Screenshot::Screens
07087c10 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07087c14 00000004 D CTRPluginFramework::RendererPriv::g_customColor
07087c18 000001f4 D opcode_names
07087e0c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07087e10 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07087e14 00000004 D CTRPluginFramework::FwkSettings::Header
07087e18 00000004 D g_charPerSheet
07087e1c 00000004 D UserManualFilled15
07087e20 00000004 D Unsplash15
07087e24 00000004 D UnCheckedCheckbox
07087e28 00000004 D TrashFilled25
07087e2c 00000004 D Trash25
07087e30 00000004 D Star15
07087e34 00000004 D Shutdown15
07087e38 00000004 D Settings15
07087e3c 00000004 D Search15
07087e40 00000004 D Save25
07087e44 00000004 D Rocket40
07087e48 00000004 D Restart15
07087e4c 00000004 D RAM15
07087e50 00000004 D PlusFilled25
07087e54 00000004 D Plus25
07087e58 00000004 D More15
07087e5c 00000004 D Maintenance15
07087e60 00000004 D KeyboardFilled25
07087e64 00000004 D Keyboard25
07087e68 00000004 D InfoFilled25
07087e6c 00000004 D Info25
07087e70 00000004 D HandCursor15
07087e74 00000004 D Grid15
07087e78 00000004 D GameControllerFilled25
07087e7c 00000004 D GameController25
07087e80 00000004 D GameController15
07087e84 00000004 D FolderFilled
07087e88 00000004 D File15
07087e8c 00000004 D EnterKeyFilled15
07087e90 00000004 D EnterKey15
07087e94 00000004 D EditFilled25
07087e98 00000004 D Edit25
07087e9c 00000004 D DuplicateFilled25
07087ea0 00000004 D Duplicate25
07087ea4 00000004 D DefaultKeyboardCustomIcon
07087ea8 00000004 D CutFilled25
07087eac 00000004 D Cut25
07087eb0 00000004 D Controller15
07087eb4 00000004 D CloseWindowFilled20
07087eb8 00000004 D CloseWindow20
07087ebc 00000004 D ClipboardFilled25
07087ec0 00000004 D Clipboard25
07087ec4 00000004 D ClearSymbolFilled15
07087ec8 00000004 D ClearSymbol15
07087ecc 00000004 D CheckedCheckbox
07087ed0 00000004 D CapsLockOnFilled15
07087ed4 00000004 D CapsLockOn15
07087ed8 00000004 D AddFavoriteFilled25
07087edc 00000004 D AddFavorite25
07087ee0 00000004 D About15
07087ee4 00000001 D CTRPluginFramework::EventManager::_refresh
07087ee8 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07087eec 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07087ef0 00000004 d kCount
07087ef4 00000004 d kDelay
07087ef8 00000004 d kInterval
07087efc 00000004 D __cxxabiv1::__unexpected_handler
07087f00 00000004 D __cxxabiv1::__terminate_handler
07087f04 00000004 D _impure_ptr
07087f08 00000460 d impure_data
07088368 00000408 D __malloc_av_
07088770 00000004 D __malloc_sbrk_base
07088774 00000004 D __malloc_trim_threshold
07088778 00000008 D _tzname
07088780 00000058 d tzinfo
070887d8 00000002 d numempty
070887dc 0000016c D __global_locale
07088948 00000004 D environ
0708894c 0000008c D devoptab_list
070889d8 0000000c d __stderr_handle
070889e4 0000000c d __stdin_handle
070889f0 0000000c d __stdout_handle
070889fc 00001000 d handles
07089a10 d _GLOBAL_OFFSET_TABLE_
07089a1c D __tdata_lma
07089a28 d __frame_dummy_init_array_entry
07089a28 D __init_array_start
07089a28 B __preinit_array_end
07089a28 B __preinit_array_start
07089a28 D __tdata_lma_end
07089a8c d __do_global_dtors_aux_fini_array_entry
07089a8c D __init_array_end
07089ae0 D __bss_start__
07089ae0 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089aec 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07089af0 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07089af4 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089af8 00000004 b ncsndMutex
07089afc 00000004 b ncsndCmdCurOff
07089b00 00000004 b ncsndCmdStartOff
07089b04 00000004 B ncsndSharedMem
07089b08 00000004 B ncsndCSNDHandle
07089b0c 00000004 B ncsndChannels
07089b10 00000004 b ncsndRefCount
07089b14 00000010 B ncsndOffsets
07089b24 00000004 B ncsndSharedMemSize
07089b28 00000004 b ncsndSharedMemBlock
07089b2c 00000001 b ncsndCookieHooked
07089b30 0000000c b ncsndCookie
07089b3c b saved_stack
07089b44 00000004 b cwavListCount
07089b48 00000004 b cwavList
07089b4c 00000004 b cwavAddedToList
07089b50 b completed.1
07089b54 b object.0
07089b6c 00000004 b CTRPluginFramework::g_runningInstance
07089b70 00000004 b g_onLoadCroHook
07089b74 00000004 b g_onLoadCroLock
07089b78 00000004 B CTRPluginFramework::g_keepEvent
07089b80 00000008 B CTRPluginFramework::_sdmcArchive
07089b88 00000004 B CTRPluginFramework::g_keepThreadHandle
07089b8c 00000004 B CTRPluginFramework::g_continueGameEvent
07089b90 00000008 b CTRPluginFramework::g_mainThread
07089b98 00001000 b CTRPluginFramework::keepThreadStack
0708ab98 00000004 b g_mainThreadVars
0708ab9c 00000004 b plgEvent
0708aba0 00000004 b plgLdrArbiter
0708aba4 00000004 b plgLdrHandle
0708aba8 00000004 b plgLdrRefCount
0708abac 00000004 b plgReply
0708abb0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708abb4 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708abb8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708abc0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708abc8 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708abcc 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708abd0 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708abd8 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708abe0 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708abe4 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708abe8 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708abec 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708abf4 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708abf8 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708abfc 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708ac00 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708ac04 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708ac08 00000008 b CTRPluginFramework::g_sleepEvent
0708ac10 00000004 B CTRPluginFramework::Screenshot::_filecount
0708ac14 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708ac1c 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708ac24 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708ac28 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708ac40 00000008 B CTRPluginFramework::Screenshot::Timer
0708ac48 00000004 B CTRPluginFramework::Screenshot::_mode
0708ac4c 00000008 B CTRPluginFramework::Screenshot::_task
0708ac54 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708ac70 00000008 B CTRPluginFramework::Screenshot::_timer
0708ac78 00000004 B CTRPluginFramework::Screenshot::_display
0708ac7c 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708ac80 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708ac84 00000004 b CTRPluginFramework::isReady
0708ac88 00000004 B CTRPluginFramework::ScreenImpl::Top
0708ac8c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708ac90 000000ac b CTRPluginFramework::_botBuf
0708ad3c 000000ac b CTRPluginFramework::_topBuf
0708ade8 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708ae90 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708ae94 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708aea0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708aea4 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708aeb0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708aec0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708aec4 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708aec8 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708aecc 00000004 B CTRPluginFramework::ProcessImpl::Status
0708aed0 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708af38 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708af40 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708af44 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708af48 00000044 b CTRPluginFramework::g_previousException
0708af8c 0000001c B CTRPluginFramework::HookManager::_singleton
0708afa8 0000000c b sAddrMap
0708afb4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708afb8 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708afbc 00000008 b CTRPluginFramework::Heap::g_heapPool
0708afc4 0000000c b CTRPluginFramework::Heap::_mutex
0708afd0 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708afdc 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708afe0 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708afec 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708aff0 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708aff4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708aff8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708affc 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708b000 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b004 00000004 b CTRPluginFramework::g_bymeString
0708b008 00000004 b CTRPluginFramework::g_ctrpfString
0708b010 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708b018 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b020 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708b028 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708b030 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708b034 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b03c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708b040 00000004 b CTRPluginFramework::g_radioId
0708b044 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b048 00000004 b CTRPluginFramework::__pmARinstance
0708b04c 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b054 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708b058 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b05c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b060 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b064 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b068 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b06c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b070 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b074 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b078 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708b084 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708b090 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708b0a0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b0a8 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708b0ac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b0bc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b0d0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b0d8 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b0e8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b0f8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b108 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b118 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708b11c 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b120 00000004 B CTRPluginFramework::__g_hexEditor
0708b124 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b134 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708b138 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708b13c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708b14c 00000004 b CTRPluginFramework::__converter
0708b150 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708b160 00000028 B CTRPluginFramework::Window::BottomWindow
0708b188 00000028 B CTRPluginFramework::Window::TopWindow
0708b1b0 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b1b4 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b1c0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b1c4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b1c8 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708b1cc 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708b1d8 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708b1e0 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708b1e4 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708b208 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708b220 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708b224 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708b228 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708b22c 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708b238 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708b240 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708b248 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708b250 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708b258 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708b260 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708b264 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708b270 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708b274 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708b278 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708b284 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708b290 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708b2a8 00000050 b CTRPluginFramework::g_fpsCounter
0708b2f8 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708b2fc 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708b318 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708b31c 00000004 B CTRPluginFramework::g_fontAllocated
0708b320 00000004 B CTRPluginFramework::g_glyphAllocated
0708b324 0000000c B CTRPluginFramework::Font::_mutex
0708b330 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708b334 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708b338 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708b33c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708b340 00000010 B CTRPluginFramework::ARHandler::Data
0708b350 00000008 B CTRPluginFramework::ARHandler::Offset
0708b358 00000008 B CTRPluginFramework::ARHandler::Storage
0708b360 00000001 b CTRPluginFramework::ToggleFloat
0708b368 00000fa0 b CTRPluginFramework::arStack
0708c308 00000004 b CTRPluginFramework::g_context
0708c30c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708c310 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708c31c 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708c320 00000004 b CTRPluginFramework::__arCodeEditor
0708c324 00000001 b CTRPluginFramework::g_condAgainstData
0708c325 00000001 b CTRPluginFramework::g_newCondDataToggle
0708c328 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708c334 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708c338 0000000c B CTRPluginFramework::g_codeTypes
0708c344 00000008 B CTRPluginFramework::Preferences::Backlights
0708c34c 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708c364 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708c37c 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708c394 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708c398 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708c39c 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708c3a0 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708c3a8 00000008 B CTRPluginFramework::Preferences::Flags
0708c3b0 000000a8 B CTRPluginFramework::Preferences::Settings
0708c458 000009c4 b CTRPluginFramework::g_rng
0708ce1c 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708ce20 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708ce38 0000000c b __mutex
0708ce44 00000018 b __threads
0708ce5c 00000004 B CTRPluginFramework::System::OnAbort
0708ce60 00000004 B CTRPluginFramework::Process::OnPauseResume
0708ce64 00000004 B CTRPluginFramework::Process::exceptionCallback
0708ce68 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708ce6c 00000004 B CTRPluginFramework::Controller::_keysReleased
0708ce70 00000004 B CTRPluginFramework::Controller::_keysDown
0708ce74 00000004 B CTRPluginFramework::Controller::_keysHeld
0708ce78 0000001c b CTRPluginFramework::g_dummy
0708ce94 00000180 b CTRPluginFramework::g_keyName
0708d014 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d016 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d018 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d01c 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708d020 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708d038 0000000c B CTRPluginFramework::FSPath::FSMutex
0708d044 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708d048 00000001 B CTRPluginFramework::EventManager::_isTouching
0708d04c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708d050 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708d060 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d064 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708d068 00000004 b CTRPluginFramework::g_HookMode
0708d06c 00000004 b CTRPluginFramework::g_OpenFileLock
0708d070 00000040 b CTRPluginFramework::g_hookExportFile
0708d0b0 00000004 b CTRPluginFramework::g_screenshotEntry
0708d0b4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708d0b8 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708d0bc 00000004 b CTRPluginFramework::g_mode
0708d0c0 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708d0c8 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708d0cc 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708d0d0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708d0d4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708d0e4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708d0f4 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708d0f8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708d100 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708d108 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708d110 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708d114 00000001 b CTRPluginFramework::g_progressLoop
0708d118 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708d128 00000004 B CTRPluginFramework::_pool
0708d12c 00000004 b arbiter
0708d130 00000004 B g_sharedFont
0708d134 00000004 b sharedFontAddr
0708d138 00000004 b srvHandle
0708d13c 00000004 b srvRefCount
0708d140 00000004 b currentAddr
0708d144 00000004 b maxAddr
0708d148 00000004 b minAddr
0708d14c 00000004 b cfguHandle
0708d150 00000004 b cfguRefCount
0708d154 00000004 b gspEvent
0708d158 00000004 b gspEventThread
0708d15c 00000004 b gspGpuHandle
0708d160 00000001 b gspGpuRight
0708d164 00000004 b gspRefCount
0708d168 00000001 b gspRunEvents
0708d16c 00000004 b gspSharedMem
0708d170 00000004 b gspSharedMemHandle
0708d174 00000004 b acHandle
0708d178 00000004 b acRefCount
0708d17c 00000004 b amHandle
0708d180 00000004 b amRefCount
0708d184 0000000c b aptFirstHook
0708d190 00000004 b aptLockHandle
0708d194 00000001 b flagInit.1
0708d195 00000001 b flagValue.0
0708d198 00000004 b serviceName.6
0708d19c 00000006 b aVec
0708d1a4 00000004 b cPos
0708d1a8 00000006 b gRate
0708d1b0 00000014 B hidEvents
0708d1c4 00000004 B hidHandle
0708d1c8 00000004 B hidMemHandle
0708d1cc 00000004 b hidRefCount
0708d1d0 00000004 B hidSharedMem
0708d1d4 00000004 b kDown
0708d1d8 00000004 b kHeld
0708d1dc 00000004 b kOld
0708d1e0 00000004 b kRepeat
0708d1e4 00000004 b kUp
0708d1e8 00000004 b tPos
0708d1ec 00000001 b usingIrrst
0708d1f0 00000004 b srvPmHandle
0708d1f8 00000080 b fsExemptArchives
0708d278 00000004 b fsuHandle
0708d27c 00000004 b fsuRefCount
0708d280 00000004 B __ctru_heap
0708d284 00000004 V __ctru_heap_size
0708d288 00000004 B __ctru_linear_heap
0708d28c 00000004 b csPos
0708d290 00000004 B irrstEvent
0708d294 00000004 B irrstHandle
0708d298 00000004 B irrstMemHandle
0708d29c 00000004 b irrstRefCount
0708d2a0 00000004 B irrstSharedMem
0708d2a4 00000004 b kHeld
0708d2a8 00000004 b (anonymous namespace)::__new_handler
0708d2ac 00000010 b (anonymous namespace)::emergency_pool
0708d2bc 0000000c b eh_globals
0708d2c8 00000010 V std::string::_Rep::_S_empty_rep_storage
0708d2d8 0000000c b __sfp_recursive_mutex
0708d2e4 0000000c b __sinit_recursive_mutex
0708d2f0 00000028 B __malloc_current_mallinfo
0708d318 00000004 B __malloc_max_sbrked_mem
0708d31c 00000004 B __malloc_max_total_mem
0708d320 00000004 B __malloc_top_pad
0708d324 0000000c b __malloc_recursive_mutex
0708d330 00000004 b __tz_mutex
0708d334 0000000b b __tzname_dst
0708d340 0000000b b __tzname_std
0708d34c 00000004 b prev_tzenv
0708d350 00000004 B _daylight
0708d354 00000004 B _timezone
0708d358 0000000c B __atexit_recursive_mutex
0708d364 00000004 b initial_env
0708d368 0000000c b __env_recursive_mutex
0708d374 00000004 b heap_start.0
0708d378 00000004 B fake_heap_end
0708d37c 00000004 B fake_heap_start
0708d380 00000004 b __hndl_lock
0708d384 B __tls_start
0708d3ac B __bss_end__
0708d3ac A __end__
0708d3ac B __tls_end
